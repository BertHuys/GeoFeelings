var app=angular.module("GeoFeelings",["control","geolocation","googleservice"]),control=angular.module("control",["geolocation","googleservice"]);control.controller("control",function(o,a,t,e,n){o.formData={};var i={};o.formData.latitude=3.250102,o.formData.longitude=50.825078,e.getLocation().then(function(a){i={lat:a.coords.latitude,"long":a.coords.longitude},o.formData.longitude=parseFloat(i["long"]).toFixed(3),o.formData.latitude=parseFloat(i.lat).toFixed(3),n.refresh(o.formData.latitude,o.formData.longitude)}),t.$on("clicked",function(){o.$apply(function(){o.formData.latitude=parseFloat(n.clickLat).toFixed(3),o.formData.longitude=parseFloat(n.clickLong).toFixed(3)})}),o.checkIn=function(){var t={username:o.formData.username,mood:o.formData.mood,location:[o.formData.longitude,o.formData.latitude],motivation:o.formData.motivation};a.post("/checkins",t).success(function(a){o.formData.username="",o.formData.mood="",o.formData.motivation="",n.refresh(o.formData.latitude,o.formData.longitude)}).error(function(o){console.log("Error: "+o)})}}),angular.module("googleservice",[]).factory("googleservice",function(o,a){var t,e,n={},i=[],r=3.250102,l=50.825078;n.clickLat=0,n.clickLong=0,n.refresh=function(o,t){i=[],r=o,l=t,a.get("/checkins").success(function(a){i=c(a),m(o,t)}).error(function(){})};var c=function(o){for(var a=[],t=0;t<o.length;t++){var e=o[t],n="<p><b>Username</b>: "+e.username+"<br><b>Mood</b>: "+e.mood+"<br><b>Motivation</b>: "+e.motivation+"<br><b>Place</b>: "+e.place+"</p>";a.push({latlon:new google.maps.LatLng(e.location[1],e.location[0]),message:new google.maps.InfoWindow({content:n,maxWidth:320}),username:e.username,mood:e.mood,motivation:e.motivation})}return a},m=function(a,c){var m={lat:r,lng:l};if(!g)var g=new google.maps.Map(document.getElementById("map"),{zoom:3,center:m});i.forEach(function(o,a){var t=new google.maps.Marker({position:o.latlon,map:g,title:"Big Map",icon:"http://maps.google.com/mapfiles/ms/icons/blue-dot.png"});google.maps.event.addListener(t,"click",function(a){e=o,o.message.open(g,t)})});var s=new google.maps.LatLng(a,c),p=new google.maps.Marker({position:s,animation:google.maps.Animation.BOUNCE,map:g,icon:"http://maps.google.com/mapfiles/ms/icons/red-dot.png"});t=p,g.panTo(new google.maps.LatLng(a,c)),google.maps.event.addListener(g,"click",function(a){var e=new google.maps.Marker({position:a.latLng,animation:google.maps.Animation.BOUNCE,map:g,icon:"http://maps.google.com/mapfiles/ms/icons/red-dot.png"});t&&t.setMap(null),t=e,g.panTo(e.position),n.clickLat=e.getPosition().lat(),n.clickLong=e.getPosition().lng(),o.$broadcast("clicked")})};return google.maps.event.addDomListener(window,"load",n.refresh(r,l)),n});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImNvbnRyb2wuanMiLCJnb29nbGVzZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImFwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRodHRwIiwiJHJvb3RTY29wZSIsImdlb2xvY2F0aW9uIiwiZ29vZ2xlc2VydmljZSIsImZvcm1EYXRhIiwiY29vcmRzIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJnZXRMb2NhdGlvbiIsInRoZW4iLCJkYXRhIiwibGF0IiwibG9uZyIsInBhcnNlRmxvYXQiLCJ0b0ZpeGVkIiwicmVmcmVzaCIsIiRvbiIsIiRhcHBseSIsImNsaWNrTGF0IiwiY2xpY2tMb25nIiwiY2hlY2tJbiIsImNoZWNrSW5EYXRhIiwidXNlcm5hbWUiLCJtb29kIiwibG9jYXRpb24iLCJtb3RpdmF0aW9uIiwicG9zdCIsInN1Y2Nlc3MiLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJmYWN0b3J5IiwibGFzdE1hcmtlciIsImN1cnJlbnRTZWxlY3RlZE1hcmtlciIsImdvb2dsZU1hcFNlcnZpY2UiLCJsb2NhdGlvbnMiLCJzZWxlY3RlZExhdCIsInNlbGVjdGVkTG9uZyIsImdldCIsInJlc3BvbnNlIiwiY29udmVydFRvTWFwUG9pbnRzIiwiaW5pdGlhbGl6ZSIsImkiLCJsZW5ndGgiLCJjaGVja2luIiwiY29udGVudFN0cmluZyIsInBsYWNlIiwicHVzaCIsImxhdGxvbiIsImdvb2dsZSIsIm1hcHMiLCJMYXRMbmciLCJtZXNzYWdlIiwiSW5mb1dpbmRvdyIsImNvbnRlbnQiLCJtYXhXaWR0aCIsIm15TGF0TG5nIiwibG5nIiwibWFwIiwiTWFwIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInpvb20iLCJjZW50ZXIiLCJmb3JFYWNoIiwibiIsIm1hcmtlciIsIk1hcmtlciIsInBvc2l0aW9uIiwidGl0bGUiLCJpY29uIiwiZXZlbnQiLCJhZGRMaXN0ZW5lciIsImUiLCJvcGVuIiwiaW5pdGlhbExvY2F0aW9uIiwiYW5pbWF0aW9uIiwiQW5pbWF0aW9uIiwiQk9VTkNFIiwicGFuVG8iLCJsYXRMbmciLCJzZXRNYXAiLCJnZXRQb3NpdGlvbiIsIiRicm9hZGNhc3QiLCJhZGREb21MaXN0ZW5lciIsIndpbmRvdyJdLCJtYXBwaW5ncyI6IkFBR0EsR0FBQUEsS0FBQUMsUUFBQUMsT0FBQSxlQUFBLFVBQUEsY0FBQSxrQkNIQUMsUUFBQUYsUUFBQUMsT0FBQSxXQUFBLGNBQUEsaUJBQ0FDLFNBQUFDLFdBQUEsVUFBQSxTQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxHQUNBSixFQUFBSyxXQUNBLElBQUFDLEtBR0FOLEdBQUFLLFNBQUFFLFNBQUEsU0FDQVAsRUFBQUssU0FBQUcsVUFBQSxVQUVBTCxFQUFBTSxjQUFBQyxLQUFBLFNBQUFDLEdBRUFMLEdBQUFNLElBQUFELEVBQUFMLE9BQUFDLFNBQUFNLE9BQUFGLEVBQUFMLE9BQUFFLFdBRUFSLEVBQUFLLFNBQUFHLFVBQUFNLFdBQUFSLEVBQUFBLFNBQUFTLFFBQUEsR0FDQWYsRUFBQUssU0FBQUUsU0FBQU8sV0FBQVIsRUFBQU0sS0FBQUcsUUFBQSxHQUdBWCxFQUFBWSxRQUFBaEIsRUFBQUssU0FBQUUsU0FBQVAsRUFBQUssU0FBQUcsYUFHQU4sRUFBQWUsSUFBQSxVQUFBLFdBR0FqQixFQUFBa0IsT0FBQSxXQUNBbEIsRUFBQUssU0FBQUUsU0FBQU8sV0FBQVYsRUFBQWUsVUFBQUosUUFBQSxHQUNBZixFQUFBSyxTQUFBRyxVQUFBTSxXQUFBVixFQUFBZ0IsV0FBQUwsUUFBQSxPQUlBZixFQUFBcUIsUUFBQSxXQUNBLEdBQUFDLElBQ0FDLFNBQUF2QixFQUFBSyxTQUFBa0IsU0FDQUMsS0FBQXhCLEVBQUFLLFNBQUFtQixLQUNBQyxVQUFBekIsRUFBQUssU0FBQUcsVUFBQVIsRUFBQUssU0FBQUUsVUFDQW1CLFdBQUExQixFQUFBSyxTQUFBcUIsV0FFQXpCLEdBQUEwQixLQUFBLFlBQUFMLEdBQUFNLFFBQUEsU0FBQWpCLEdB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QUFBQyxJQUVBSCIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IEJFUlQgb24gMy8wMS8xNi5cbiAqL1xudmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdHZW9GZWVsaW5ncycsWydjb250cm9sJywnZ2VvbG9jYXRpb24nLCdnb29nbGVzZXJ2aWNlJ10pOyIsInZhciBjb250cm9sID0gYW5ndWxhci5tb2R1bGUoJ2NvbnRyb2wnLFsnZ2VvbG9jYXRpb24nLCdnb29nbGVzZXJ2aWNlJ10pO1xuY29udHJvbC5jb250cm9sbGVyKCdjb250cm9sJyxmdW5jdGlvbigkc2NvcGUsJGh0dHAsJHJvb3RTY29wZSxnZW9sb2NhdGlvbixnb29nbGVzZXJ2aWNlKXtcbiAgICAkc2NvcGUuZm9ybURhdGEgPXt9O1xuICAgIHZhciBjb29yZHMgPXt9O1xuICAgIHZhciBsb25nID0gMDtcbiAgICB2YXIgbGF0ID0gMDtcbiAgICAkc2NvcGUuZm9ybURhdGEubGF0aXR1ZGUgPSAzLjI1MDEwMjtcbiAgICAkc2NvcGUuZm9ybURhdGEubG9uZ2l0dWRlID0gNTAuODI1MDc4O1xuXG4gICAgZ2VvbG9jYXRpb24uZ2V0TG9jYXRpb24oKS50aGVuKGZ1bmN0aW9uKGRhdGEpe1xuXG4gICAgICAgIGNvb3JkcyA9IHtsYXQ6ZGF0YS5jb29yZHMubGF0aXR1ZGUsIGxvbmc6ZGF0YS5jb29yZHMubG9uZ2l0dWRlfTtcblxuICAgICAgICAkc2NvcGUuZm9ybURhdGEubG9uZ2l0dWRlID0gcGFyc2VGbG9hdChjb29yZHMubG9uZykudG9GaXhlZCgzKTtcbiAgICAgICAgJHNjb3BlLmZvcm1EYXRhLmxhdGl0dWRlID0gcGFyc2VGbG9hdChjb29yZHMubGF0KS50b0ZpeGVkKDMpO1xuXG5cbiAgICAgICAgZ29vZ2xlc2VydmljZS5yZWZyZXNoKCRzY29wZS5mb3JtRGF0YS5sYXRpdHVkZSwgJHNjb3BlLmZvcm1EYXRhLmxvbmdpdHVkZSk7XG5cbiAgICB9KTtcbiAgICAkcm9vdFNjb3BlLiRvbihcImNsaWNrZWRcIiwgZnVuY3Rpb24oKXtcblxuICAgICAgICAvLyBSdW4gdGhlIGdzZXJ2aWNlIGZ1bmN0aW9ucyBhc3NvY2lhdGVkIHdpdGggaWRlbnRpZnlpbmcgY29vcmRpbmF0ZXNcbiAgICAgICAgJHNjb3BlLiRhcHBseShmdW5jdGlvbigpe1xuICAgICAgICAgICAgJHNjb3BlLmZvcm1EYXRhLmxhdGl0dWRlID0gcGFyc2VGbG9hdChnb29nbGVzZXJ2aWNlLmNsaWNrTGF0KS50b0ZpeGVkKDMpO1xuICAgICAgICAgICAgJHNjb3BlLmZvcm1EYXRhLmxvbmdpdHVkZSA9IHBhcnNlRmxvYXQoZ29vZ2xlc2VydmljZS5jbGlja0xvbmcpLnRvRml4ZWQoMyk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgJHNjb3BlLmNoZWNrSW4gPSBmdW5jdGlvbigpe1xuICAgICAgICB2YXIgY2hlY2tJbkRhdGEgPSB7XG4gICAgICAgICAgICB1c2VybmFtZTogJHNjb3BlLmZvcm1EYXRhLnVzZXJuYW1lLFxuICAgICAgICAgICAgbW9vZDogJHNjb3BlLmZvcm1EYXRhLm1vb2QsXG4gICAgICAgICAgICBsb2NhdGlvbjpbJHNjb3BlLmZvcm1EYXRhLmxvbmdpdHVkZSwkc2NvcGUuZm9ybURhdGEubGF0aXR1ZGVdLFxuICAgICAgICAgICAgbW90aXZhdGlvbjogJHNjb3BlLmZvcm1EYXRhLm1vdGl2YXRpb25cbiAgICAgICAgfTtcbiAgICAgICAgJGh0dHAucG9zdCgnL2NoZWNraW5zJyxjaGVja0luRGF0YSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICRzY29wZS5mb3JtRGF0YS51c2VybmFtZT1cIlwiO1xuICAgICAgICAgICAgJHNjb3BlLmZvcm1EYXRhLm1vb2Q9XCJcIjtcbiAgICAgICAgICAgICRzY29wZS5mb3JtRGF0YS5tb3RpdmF0aW9uPVwiXCI7XG4gICAgICAgICAgICBnb29nbGVzZXJ2aWNlLnJlZnJlc2goJHNjb3BlLmZvcm1EYXRhLmxhdGl0dWRlLCRzY29wZS5mb3JtRGF0YS5sb25naXR1ZGUgKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5lcnJvcihmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3I6ICcgKyBkYXRhKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH07XG59KTsiLCJhbmd1bGFyLm1vZHVsZSgnZ29vZ2xlc2VydmljZScsIFtdKVxuICAgIC5mYWN0b3J5KCdnb29nbGVzZXJ2aWNlJywgZnVuY3Rpb24oJHJvb3RTY29wZSwkaHR0cCl7XG5cbiAgICAgICAgdmFyIGdvb2dsZU1hcFNlcnZpY2UgPSB7fTtcbiAgICAgICAgdmFyIGxvY2F0aW9ucyA9IFtdO1xuICAgICAgICB2YXIgbGFzdE1hcmtlcjtcbiAgICAgICAgdmFyIGN1cnJlbnRTZWxlY3RlZE1hcmtlcjtcbiAgICAgICAgdmFyIHNlbGVjdGVkTGF0ID0gMy4yNTAxMDI7XG4gICAgICAgIHZhciBzZWxlY3RlZExvbmcgPSA1MC44MjUwNzg7XG4gICAgICAgIGdvb2dsZU1hcFNlcnZpY2UuY2xpY2tMYXQgID0gMDtcbiAgICAgICAgZ29vZ2xlTWFwU2VydmljZS5jbGlja0xvbmcgPSAwO1xuXG4gICAgICAgIGdvb2dsZU1hcFNlcnZpY2UucmVmcmVzaCA9IGZ1bmN0aW9uKGxhdGl0dWRlLCBsb25naXR1ZGUpe1xuICAgICAgICAgICAgbG9jYXRpb25zID0gW107XG5cbiAgICAgICAgICAgIHNlbGVjdGVkTGF0ID0gbGF0aXR1ZGU7XG4gICAgICAgICAgICBzZWxlY3RlZExvbmcgPSBsb25naXR1ZGU7XG5cbiAgICAgICAgICAgICRodHRwLmdldCgnL2NoZWNraW5zJykuc3VjY2VzcyhmdW5jdGlvbihyZXNwb25zZSl7XG4gICAgICAgICAgICAgICAgbG9jYXRpb25zID0gY29udmVydFRvTWFwUG9pbnRzKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICBpbml0aWFsaXplKGxhdGl0dWRlLCBsb25naXR1ZGUpO1xuICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oKXt9KTtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGNvbnZlcnRUb01hcFBvaW50cyA9IGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICAgICAgICAgIHZhciBsb2NhdGlvbnMgPSBbXTtcbiAgICAgICAgICAgIGZvcih2YXIgaT0gMDsgaSA8IHJlc3BvbnNlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoZWNraW4gPSByZXNwb25zZVtpXTtcbiAgICAgICAgICAgICAgICB2YXIgIGNvbnRlbnRTdHJpbmcgPVxuICAgICAgICAgICAgICAgICAgICAnPHA+PGI+VXNlcm5hbWU8L2I+OiAnICsgY2hlY2tpbi51c2VybmFtZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPGJyPjxiPk1vb2Q8L2I+OiAnICsgY2hlY2tpbi5tb29kICtcbiAgICAgICAgICAgICAgICAgICAgICAgICc8YnI+PGI+TW90aXZhdGlvbjwvYj46ICcgKyBjaGVja2luLm1vdGl2YXRpb24gK1xuICAgICAgICAgICAgICAgICAgICAgICAgJzxicj48Yj5QbGFjZTwvYj46ICcrY2hlY2tpbi5wbGFjZSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPC9wPic7XG4gICAgICAgICAgICAgICAgbG9jYXRpb25zLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBsYXRsb246IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoY2hlY2tpbi5sb2NhdGlvblsxXSwgY2hlY2tpbi5sb2NhdGlvblswXSksXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG5ldyBnb29nbGUubWFwcy5JbmZvV2luZG93KHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnRTdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aDogMzIwXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICB1c2VybmFtZTogY2hlY2tpbi51c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgbW9vZDogY2hlY2tpbi5tb29kLFxuICAgICAgICAgICAgICAgICAgICBtb3RpdmF0aW9uOiBjaGVja2luLm1vdGl2YXRpb25cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBsb2NhdGlvbnM7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBpbml0aWFsaXplID0gZnVuY3Rpb24obGF0aXR1ZGUsIGxvbmdpdHVkZSkge1xuICAgICAgICAgICAgdmFyIG15TGF0TG5nID0ge2xhdDogc2VsZWN0ZWRMYXQsIGxuZzogc2VsZWN0ZWRMb25nfTtcbiAgICAgICAgICAgIGlmICghbWFwKXtcbiAgICAgICAgICAgICAgICB2YXIgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHtcbiAgICAgICAgICAgICAgICAgICAgem9vbTogMyxcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBteUxhdExuZ1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbG9jYXRpb25zLmZvckVhY2goZnVuY3Rpb24obiwgaSl7XG4gICAgICAgICAgICAgICAgdmFyIG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogbi5sYXRsb24sXG4gICAgICAgICAgICAgICAgICAgIG1hcDogbWFwLFxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJCaWcgTWFwXCIsXG4gICAgICAgICAgICAgICAgICAgIGljb246IFwiaHR0cDovL21hcHMuZ29vZ2xlLmNvbS9tYXBmaWxlcy9tcy9pY29ucy9ibHVlLWRvdC5wbmdcIlxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGdvb2dsZS5tYXBzLmV2ZW50LmFkZExpc3RlbmVyKG1hcmtlciwgJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3RlZE1hcmtlciA9IG47XG4gICAgICAgICAgICAgICAgICAgIG4ubWVzc2FnZS5vcGVuKG1hcCwgbWFya2VyKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIGluaXRpYWxMb2NhdGlvbiA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcobGF0aXR1ZGUsIGxvbmdpdHVkZSk7XG4gICAgICAgICAgICB2YXIgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICAgICAgICAgICAgICBhbmltYXRpb246IGdvb2dsZS5tYXBzLkFuaW1hdGlvbi5CT1VOQ0UsXG4gICAgICAgICAgICAgICAgbWFwOiBtYXAsXG4gICAgICAgICAgICAgICAgaWNvbjogJ2h0dHA6Ly9tYXBzLmdvb2dsZS5jb20vbWFwZmlsZXMvbXMvaWNvbnMvcmVkLWRvdC5wbmcnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGxhc3RNYXJrZXIgPSBtYXJrZXI7XG5cbiAgICAgICAgICAgIC8vIEZ1bmN0aW9uIGZvciBtb3ZpbmcgdG8gYSBzZWxlY3RlZCBsb2NhdGlvblxuICAgICAgICAgICAgbWFwLnBhblRvKG5ldyBnb29nbGUubWFwcy5MYXRMbmcobGF0aXR1ZGUsIGxvbmdpdHVkZSkpO1xuXG4gICAgICAgICAgICAvLyBDbGlja2luZyBvbiB0aGUgTWFwIG1vdmVzIHRoZSBib3VuY2luZyByZWQgbWFya2VyXG4gICAgICAgICAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcihtYXAsICdjbGljaycsIGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgIHZhciBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGUubGF0TG5nLFxuICAgICAgICAgICAgICAgICAgICBhbmltYXRpb246IGdvb2dsZS5tYXBzLkFuaW1hdGlvbi5CT1VOQ0UsXG4gICAgICAgICAgICAgICAgICAgIG1hcDogbWFwLFxuICAgICAgICAgICAgICAgICAgICBpY29uOiAnaHR0cDovL21hcHMuZ29vZ2xlLmNvbS9tYXBmaWxlcy9tcy9pY29ucy9yZWQtZG90LnBuZydcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIC8vIFdoZW4gYSBuZXcgc3BvdCBpcyBzZWxlY3RlZCwgZGVsZXRlIHRoZSBvbGQgcmVkIGJvdW5jaW5nIG1hcmtlclxuICAgICAgICAgICAgICAgIGlmKGxhc3RNYXJrZXIpe1xuICAgICAgICAgICAgICAgICAgICBsYXN0TWFya2VyLnNldE1hcChudWxsKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgYSBuZXcgcmVkIGJvdW5jaW5nIG1hcmtlciBhbmQgbW92ZSB0byBpdFxuICAgICAgICAgICAgICAgIGxhc3RNYXJrZXIgPSBtYXJrZXI7XG4gICAgICAgICAgICAgICAgbWFwLnBhblRvKG1hcmtlci5wb3NpdGlvbik7XG5cbiAgICAgICAgICAgICAgICAvLyBVcGRhdGUgQnJvYWRjYXN0ZWQgVmFyaWFibGUgKGxldHMgdGhlIHBhbmVscyBrbm93IHRvIGNoYW5nZSB0aGVpciBsYXQsIGxvbmcgdmFsdWVzKVxuICAgICAgICAgICAgICAgIGdvb2dsZU1hcFNlcnZpY2UuY2xpY2tMYXQgPSBtYXJrZXIuZ2V0UG9zaXRpb24oKS5sYXQoKTtcbiAgICAgICAgICAgICAgICBnb29nbGVNYXBTZXJ2aWNlLmNsaWNrTG9uZyA9IG1hcmtlci5nZXRQb3NpdGlvbigpLmxuZygpO1xuICAgICAgICAgICAgICAgICRyb290U2NvcGUuJGJyb2FkY2FzdChcImNsaWNrZWRcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuLy8gUmVmcmVzaCB0aGUgcGFnZSB1cG9uIHdpbmRvdyBsb2FkLiBVc2UgdGhlIGluaXRpYWwgbGF0aXR1ZGUgYW5kIGxvbmdpdHVkZVxuICAgICAgICBnb29nbGUubWFwcy5ldmVudC5hZGREb21MaXN0ZW5lcih3aW5kb3csICdsb2FkJyxcbiAgICAgICAgICAgIGdvb2dsZU1hcFNlcnZpY2UucmVmcmVzaChzZWxlY3RlZExhdCwgc2VsZWN0ZWRMb25nKSk7XG5cbiAgICAgICAgcmV0dXJuIGdvb2dsZU1hcFNlcnZpY2U7XG4gICAgfSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
